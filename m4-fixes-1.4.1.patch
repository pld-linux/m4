Forward-ported fixes from m4 1.4.1
with NLS added to maketemp change in modules/m4.c.

[ChangeLog]
2001-04-02  Robert Bihlmeyer  <robbe@orcus.priv.at>

	http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=92629
	* m4/output.c (m4_insert_file): Do not mix buffered and
	unbuffered I/O, as this breaks on the Hurd.  (trivial change)

2001-02-01  Matt Kraai  <kraai@debian.org>

	http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=84416
	* doc/m4.texinfo (Maketemp): Change maketemp to refer to a new,
	empty file rather than to a nonexistent file.  This closes a common
	security hole.
	* modules/m4.c (m4_maketemp): Implement the above, by using
	mkstemp rather than mktemp.  (trivial change)

[NEWS]
* maketemp now creates an empty file with the given name, instead of merely
  returning the name of a nonexistent file.  This closes a security hole.

--- m4-1.4q/modules/m4.c.orig	2001-10-19 17:57:37.000000000 +0200
+++ m4-1.4q/modules/m4.c	2004-07-18 20:03:46.075712824 +0200
@@ -538,7 +538,13 @@
 /* Use the first argument as at template for a temporary file name.  */
 M4BUILTIN_HANDLER (maketemp)
 {
-  mktemp (M4ARG (1));
+  int fd;
+  if ((fd = mkstemp (M4ARG (1))) < 0)
+    {
+      M4ERROR ((warning_status, errno, _("Cannot create tempfile %s"), M4ARG (1)));
+      return;
+    }
+  close(fd);
   m4_shipout_string (obs, M4ARG (1), 0, FALSE);
 }
 
--- m4-1.4q/m4/output.c.orig	2001-10-19 17:57:37.000000000 +0200
+++ m4-1.4q/m4/output.c	2004-07-18 20:04:58.024774904 +0200
@@ -572,12 +572,12 @@
 
   /* Insert output by big chunks.  */
 
-  while (length = read (fileno (file), buffer, COPY_BUFFER_SIZE),
+  errno = 0;
+  while (length = fread (buffer, 1, COPY_BUFFER_SIZE, file),
 	 length != 0)
-    if (length == (size_t) -1)
-      M4ERROR ((EXIT_FAILURE, errno, _("reading inserted file")));
-    else
-      output_text (buffer, length);
+    output_text (buffer, length);
+  if (errno)
+    M4ERROR ((EXIT_FAILURE, errno, _("reading inserted file")));
 }
 
 /* Insert diversion number DIVNUM into the current output file.  The
--- m4-1.4q/doc/m4.texinfo.orig	2004-07-18 19:58:26.579283664 +0200
+++ m4-1.4q/doc/m4.texinfo	2004-07-18 20:07:08.988865336 +0200
@@ -22,8 +22,8 @@
 @ifinfo
 This file documents GNU @code{m4} @value{VERSION}
 
-Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1998, 1999, 2000, 2001
-Free Software Foundation, Inc.
+Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1998, 1999, 2000, 2001,
+2004 Free Software Foundation, Inc.
 
 Permission is granted to copy, distribute and/or modify this document
 under the terms of the GNU Free Documentation License, Version 1.1
@@ -3423,7 +3423,7 @@
 
 @deffn {Builtin (m4)} maketemp (@var{template})
 There is a builtin macro, @code{maketemp}, for making temporary file
-names, which expands to a name of a non-existent file, made from the
+names, which expands to a name of a new, empty file, made from the
 string @var{template}, which should end with the string @samp{XXXXXX}.
 The six @code{X}'s are then replaced, usually with something that
 includes the process id of the @code{m4} process, in order to make the
@@ -3437,15 +3437,8 @@
 @example
 maketemp(`/tmp/fooXXXXXX')
 @result{}/tmp/fooa07346
-maketemp(`/tmp/fooXXXXXX')
-@result{}/tmp/fooa07346
 @end example
 
-As seen in the example, several calls of @code{maketemp} might expand to
-the same string, since the selection criteria is whether the file exists
-or not.  If a file has not been created before the next call, the two
-macro calls might expand to the same name.
-
 @node Miscellaneous
 @chapter Miscellaneous builtin macros
 
--- m4-1.4q/po/pl.po.orig	2004-07-18 19:58:26.599280624 +0200
+++ m4-1.4q/po/pl.po	2004-07-18 20:09:20.541866240 +0200
@@ -367,6 +367,11 @@
 msgid "Cannot open %s"
 msgstr "Nie mo¿na otworzyæ %s"
 
+#: modules/m4.c:544
+#, c-format
+msgid "Cannot create tempfile %s"
+msgstr "Nie mo¿na utworzyæ pliku tymczasowego %s"
+
 #: modules/mpeval.c:189
 #, c-format
 msgid "Loss of precision in eval: %s"
